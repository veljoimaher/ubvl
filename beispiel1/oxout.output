Grammar

    0 $accept: yyyAugNonterm $end

    1 $@1: /* empty */

    2 yyyAugNonterm: $@1 stmt_list

    3 stmt_list: /* empty */
    4          | stmt ';' stmt_list

    5 stmt: REGISTER ASSIGNOP expr
    6     | REGISTER PLUSASSIGNOP expr

    7 expr: REGISTER
    8     | constexpr

    9 constexpr: NUMBER
   10          | constexpr PLUSOP constexpr


Terminals, with rules where they appear

$end (0) 0
';' (59) 4
error (256)
ASSIGNOP (258) 5
PLUSASSIGNOP (259) 6
PLUSOP (260) 10
REGISTER (261) 5 6 7
NUMBER (262) 9


Nonterminals, with rules where they appear

$accept (9)
    on left: 0
yyyAugNonterm (10)
    on left: 2, on right: 0
$@1 (11)
    on left: 1, on right: 2
stmt_list (12)
    on left: 3 4, on right: 2 4
stmt (13)
    on left: 5 6, on right: 4
expr (14)
    on left: 7 8, on right: 5 6
constexpr (15)
    on left: 9 10, on right: 8 10


state 0

    0 $accept: . yyyAugNonterm $end

    $default  reduce using rule 1 ($@1)

    yyyAugNonterm  go to state 1
    $@1            go to state 2


state 1

    0 $accept: yyyAugNonterm . $end

    $end  shift, and go to state 3


state 2

    2 yyyAugNonterm: $@1 . stmt_list

    REGISTER  shift, and go to state 4

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 5
    stmt       go to state 6


state 3

    0 $accept: yyyAugNonterm $end .

    $default  accept


state 4

    5 stmt: REGISTER . ASSIGNOP expr
    6     | REGISTER . PLUSASSIGNOP expr

    ASSIGNOP      shift, and go to state 7
    PLUSASSIGNOP  shift, and go to state 8


state 5

    2 yyyAugNonterm: $@1 stmt_list .

    $default  reduce using rule 2 (yyyAugNonterm)


state 6

    4 stmt_list: stmt . ';' stmt_list

    ';'  shift, and go to state 9


state 7

    5 stmt: REGISTER ASSIGNOP . expr

    REGISTER  shift, and go to state 10
    NUMBER    shift, and go to state 11

    expr       go to state 12
    constexpr  go to state 13


state 8

    6 stmt: REGISTER PLUSASSIGNOP . expr

    REGISTER  shift, and go to state 10
    NUMBER    shift, and go to state 11

    expr       go to state 14
    constexpr  go to state 13


state 9

    4 stmt_list: stmt ';' . stmt_list

    REGISTER  shift, and go to state 4

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 15
    stmt       go to state 6


state 10

    7 expr: REGISTER .

    $default  reduce using rule 7 (expr)


state 11

    9 constexpr: NUMBER .

    $default  reduce using rule 9 (constexpr)


state 12

    5 stmt: REGISTER ASSIGNOP expr .

    $default  reduce using rule 5 (stmt)


state 13

    8 expr: constexpr .
   10 constexpr: constexpr . PLUSOP constexpr

    PLUSOP  shift, and go to state 16

    $default  reduce using rule 8 (expr)


state 14

    6 stmt: REGISTER PLUSASSIGNOP expr .

    $default  reduce using rule 6 (stmt)


state 15

    4 stmt_list: stmt ';' stmt_list .

    $default  reduce using rule 4 (stmt_list)


state 16

   10 constexpr: constexpr PLUSOP . constexpr

    NUMBER  shift, and go to state 11

    constexpr  go to state 17


state 17

   10 constexpr: constexpr . PLUSOP constexpr
   10          | constexpr PLUSOP constexpr .

    $default  reduce using rule 10 (constexpr)
